<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/rabbit  
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd">

	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="connectionFactory"
		virtual-host="/" username="guest" password="guest" host="127.0.0.1" port="5672" />
	
	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin id="connectAdmin" connection-factory="connectionFactory" />

	<!--定义queue -->
	<rabbit:queue name="queueFirst" durable="true" auto-delete="false"
		exclusive="false" declared-by="connectAdmin" />

	<!-- 定义direct exchange，绑定queueFirst -->
	<rabbit:direct-exchange name="exchangeTest"
		durable="true" auto-delete="false" declared-by="connectAdmin">
		<rabbit:bindings>
			<rabbit:binding queue="queueFirst" key="FirstKey">
			</rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
		exchange="exchangeTest" />

	<!-- 消息接收者 -->
	<bean id="messageReceiver" class="com.jianyu.consumer.FirstConsumer"></bean>

	<!-- queue listener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container
		connection-factory="connectionFactory">
		<rabbit:listener queues="queueFirst" ref="messageReceiver" />
	</rabbit:listener-container>
	
	<!--定义queue -->
	<rabbit:queue name="queueSecond" durable="true" auto-delete="false"
		exclusive="false" declared-by="connectAdmin" />

	<!-- 将已经定义的Exchange绑定到queueSecond -->
	<rabbit:direct-exchange name="exchangeTest"
		durable="true" auto-delete="false" declared-by="connectAdmin">
		<rabbit:bindings>
			<rabbit:binding queue="queueSecond" key="SecondKey"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!-- 消息接收者 -->
	<bean id="receiverSecond" class="com.jianyu.consumer.SecondConsumer"></bean>

	<!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container
		connection-factory="connectionFactory">
		<rabbit:listener queues="queueSecond" ref="receiverSecond" />
	</rabbit:listener-container>

	<!-- 分隔线 -->
	<!--配置connection-factory，指定连接rabbit server参数 -->
	
	<rabbit:connection-factory id="connectionFactory2"
		virtual-host="/" username="guest" password="guest" host="127.0.0.1"
		port="5672" />
		
	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin id="connectAdmin2" connection-factory="connectionFactory2" />

	<!--定义queue -->
	<rabbit:queue name="queueThird" durable="true" auto-delete="false"
		exclusive="false" declared-by="connectAdmin2" />

	<!-- 定义topic exchange，绑定queueThird -->
	<rabbit:topic-exchange name="exchangeTest2"
		durable="true" auto-delete="false" declared-by="connectAdmin2">
		<rabbit:bindings>
			<rabbit:binding queue="queueThird" pattern="#.Third.#"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate2" connection-factory="connectionFactory2"
		exchange="exchangeTest2" />

	<!-- 消息接收者 -->
	<bean id="recieverThird" class="com.jianyu.consumer.ThirdConsumer"></bean>

	<!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container
		connection-factory="connectionFactory2">
		<rabbit:listener queues="queueThird" ref="recieverThird" />
	</rabbit:listener-container>
</beans>  